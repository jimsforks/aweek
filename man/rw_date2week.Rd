% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rw_date2week.R, R/rw_week2date.R
\name{rw_date2week}
\alias{rw_date2week}
\alias{rw_week2date}
\alias{as.Date.rainboweek}
\alias{as.POSIXlt.rainboweek}
\alias{as.character.rainboweek}
\alias{print.rainboweek}
\title{Convert date to a an arbitrary week definition}
\usage{
rw_date2week(x, week_start = 1, floor_day = FALSE, numeric = FALSE,
  ...)

rw_week2date(x, week_start = 1, floor_day = FALSE)

\method{as.Date}{rainboweek}(x, floor_day = FALSE, ...)

\method{as.POSIXlt}{rainboweek}(x, ...)

\method{as.character}{rainboweek}(x, ...)

\method{print}{rainboweek}(x, ...)
}
\arguments{
\item{x}{a [Date], [POSIXt], [character], or any data that can be easily
converted to a date with [as.POSIXlt()].}

\item{week_start}{The start of the week from 1 to 7 where 1 = Monday}

\item{floor_day}{when `TRUE`, the days will be set to the start of the week.}

\item{numeric}{if `TRUE`, only the numeric week be returned. If `FALSE`
(default), the date in the format "YYYY-Www-d" will be returned.}

\item{...}{arguments passed to [as.POSIXlt()], unused in all other cases.}
}
\description{
Convert date to a an arbitrary week definition
}
\details{
Weeks differ in their start dates depending on context. The ISO 8601
  standard specifies that Monday starts the week while the US CDC uses Sunday
  as the start of the week. For example, MSF has varying start dates 
  depending on country in order to better coordinate response. 

  While there are package that conver conversion for ISOweeks and epiweeks,
  these do not provide seamless conversion from dates to epiweeks with 
  non-standard start dates. This package provides a lightweight utility to
  be able to convert each day.
}
\examples{

# The same set of days will occur in different weeks depending on the start
# date. Here we can define a week before and after today

print(dat <- Sys.Date() + -6:7)

# By default, the weeks are defined as ISO weeks, which start on Monday
print(iso_dat <- rw_date2week(dat))

# The rainboweek class can be converted back to a date with `as.Date()`
as.Date(iso_dat)

# If you remove the day portion from the result, you can convert the days to
# the beginning of the week:
print(iso_dat_trunc <- gsub("-\\\\d$", "", iso_dat))
as.Date(iso_dat_trunc)

# ISO week definition: Monday -- 1
rw_date2week(dat, 1)

# Tuesday -- 2
rw_date2week(dat, 2)

# Wednesday -- 3
rw_date2week(dat, 3)

# Thursday -- 4
rw_date2week(dat, 4)

# Friday -- 5
rw_date2week(dat, 5)

# Saturday -- 6
rw_date2week(dat, 6)

# Epiweek definition: Sunday -- 7 
rw_date2week(dat, 7)
}
\author{
Zhian N. Kamvar
}
