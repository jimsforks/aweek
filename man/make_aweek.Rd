% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_week.R
\name{make_aweek}
\alias{make_aweek}
\title{Create an aweek object from an integer vector of weeks}
\usage{
make_aweek(week = 1L, year = as.integer(format(Sys.Date(), "\%Y")),
  day = 1L, week_start = get_week_start(), ...)
}
\arguments{
\item{week}{an integer vector, defaults to 1, representing the first week of the year.}

\item{year}{an integer vector, defaults to the current year}

\item{day}{an integer vector, defaults to 1, representing the first day of
the first week of the year.}

\item{week_start}{an integer (or character) vector of days that the weeks
start on}

\item{...}{parameters passed on to \code{\link[=date2week]{date2week()}}}
}
\description{
This is a vectorized function that takes in integer vectors and returns
an aweek object, making it easier to convert bare weeks to dates.
}
\note{
The aweek objects can only have one week_start attribute, which will
default to the first one observed. If there is more than one week_start,
then the weeks are first converted to dates with their respective
week_start variables and then converted to aweek objects with the first
week_start variable. This allows for standardisation within a single data
set.
}
\examples{

# The default results in the first week of the year
make_aweek()
as.Date(make_aweek())

# If you have a data frame of dates, you can use it to convert easily
mat <- matrix(c(
  2019, 11, 1, 7, # 2019-03-10
  2019, 11, 2, 7,
  2019, 11, 3, 7,
  2019, 11, 4, 7,
  2019, 11, 5, 7,
  2019, 11, 6, 7,
  2019, 11, 7, 7
), ncol = 4, byrow = TRUE)
colnames(mat) <- c("year", "week", "day", "week_start")
m <- as.data.frame(mat)
m
sun <- with(m, make_aweek(week, year, day, week_start))
sun
as.Date(sun)

# You can also change starts
mon <- with(m, make_aweek(week, year, day, "Monday"))
mon
as.Date(mon)

# If you use multiple week starts, it will convert to date and then to
# the correct week, so it won't appear to match up with the original
# data frame.

sft <- with(m, make_aweek(week, year, day, 7:1))
sft
as.Date(sft)

}
